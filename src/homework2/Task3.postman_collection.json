{
	"info": {
		"_postman_id": "80f85b8e-c212-4063-863f-5f9d42d35785",
		"name": "Task3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create Project",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var g = pm.variables.replaceIn('{{$guid}}');\r",
							"const moment = require('moment');\r",
							"pm.collectionVariables.set(\"today\", moment().format(\"MM/DD/YYYY\")); \r",
							"pm.collectionVariables.set(\"myGuid\", g);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"//const jsonObject = xml2Json(requestBody);\r",
							"\r",
							"// postman.setEnvironmentVariable(\"projectName\", jsonData.token);\r",
							"//var xml = \"<music><album>Beethoven</album></music>\";\r",
							"\r",
							"//var result = $(responseBody).find(\"project\").find('name').text();\r",
							"//pm.globals.get(\"variable_key\");\r",
							"//console.log(guid);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "vwbqcn",
							"type": "string"
						},
						{
							"key": "username",
							"value": "studentws20",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "    <project>\n        <default-context-id type=\"integer\" nil=\"true\"/>\n        <default-tags></default-tags>\n        <description>{{today}}</description>\n        <name>{{myGuid}}</name>\n    </project>"
				},
				"url": {
					"raw": "{{host}}/projects.xml",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects.xml"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List of Projects",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonObject = xml2Json(responseBody);\r",
							"var g = pm.collectionVariables.get(\"myGuid\");\r",
							"pm.test(\"The progect exists \" + g, () => {\r",
							"  pm.expect(jsonObject.projects.project.filter(x => x.name == g).length>0).to.eql(true);\r",
							"});\r",
							"\r",
							"var toDelete = jsonObject.projects.project\r",
							"    \r",
							"    .filter(x => x.name >= g.length || x.name==g)\r",
							"    .slice(0, 2)\r",
							"    .map(x => x.id._);\r",
							"    console.log(toDelete);\r",
							"pm.collectionVariables.set('toDelete',toDelete);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "vwbqcn",
							"type": "string"
						},
						{
							"key": "username",
							"value": "studentws20",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects.xml",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects.xml"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeletePr",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var toDelete = pm.collectionVariables.get('toDelete');\r",
							"if(Array.isArray(toDelete) && toDelete.length>0){\r",
							"    pm.collectionVariables.set(\"myId\", toDelete[0]);\r",
							"    toDelete.shift();\r",
							"    pm.collectionVariables.set('toDelete',toDelete);\r",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Project with Id \" + pm.collectionVariables.get(\"myId\") + \" was deeted\" , () => {\r",
							"  pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"console.log(pm.response);\r",
							"\r",
							"var toDelete = pm.collectionVariables.get('toDelete');\r",
							"if(Array.isArray(toDelete) && toDelete.length>0){\r",
							"    postman.setNextRequest(\"DeletePr\");\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{host}}projects/{{myId}}.xml",
					"host": [
						"{{host}}projects"
					],
					"path": [
						"{{myId}}.xml"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "username",
				"value": "studentws20",
				"type": "string"
			},
			{
				"key": "password",
				"value": "vwbqcn",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "https://ws-tracks.demohoster.com/"
		},
		{
			"key": "myGuid",
			"value": ""
		},
		{
			"key": "today",
			"value": ""
		},
		{
			"key": "n",
			"value": ""
		},
		{
			"key": "toDelete",
			"value": ""
		},
		{
			"key": "myId",
			"value": ""
		}
	]
}